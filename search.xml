<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>日本語テスト</title>
    <url>/2013/12/24/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%86%E3%82%B9%E3%83%88/</url>
    <content><![CDATA[<p>This is a Japanese test post.</p>
<p>私は昨日ついにその助力家というのの上よりするたなけれ。</p>
<p>最も今をお話団はちょうどこの前後なかろでくらいに困りがいるたをは帰着考えたなかって、そうにもするでうたらない。</p>
<p>がたを知っないはずも同時に九月をいよいよたありた。</p>
<p>もっと槙さんにぼんやり金少し説明にえた自分大した人私か影響にというお関係たうませないが、この次第も私か兄具合に使うて、槙さんののに当人のあなたにさぞご意味と行くて私個人が小尊敬を聴いように同時に同反抗に集っだうて、いよいよまず相当へあっうからいだ事をしでなけれ。</p>
<blockquote>
<p>それでそれでもご時日をしはずはたったいやと突き抜けるますて、その元がは行ったてという獄を尽すていけですた。</p>
</blockquote>
<p>この中道具の日その学校はあなたごろがすまなりかとネルソンさんの考えるですん、辺の事実ないというご盲従ありたですと、爺さんのためが薬缶が結果までの箸の当時してならて、多少の十月にためからそういう上からとにかくしましないと触れべきものたで、ないうですと多少お人達したのでたた。</p>
<p><em>From <span class="exturl" data-url="aHR0cDovL2xpcHN1bS5zdWd1dHN1a2FlcnUuanAvaW5kZXguY2dp">すぐ使えるダミーテキスト - 日本語 Lorem ipsum</span></em></p>
]]></content>
  </entry>
  <entry>
    <title>中文測試</title>
    <url>/2013/12/24/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/</url>
    <content><![CDATA[<p>This is a Chinese test post.</p>
<p>善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。</p>
<p>以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？</p>
<p>就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我…… 月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。</p>
<p>國新故。</p>
<blockquote>
<p>工步他始能詩的，裝進分星海演意學值例道…… 於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p>
</blockquote>
<p><em>From <span class="exturl" data-url="aHR0cDovL3d3dy5yaWNoeWxpLmNvbS90b29sL2xvcmVtaXBzdW0v">亂數假文產生器 - Chinese Lorem Ipsum</span></em></p>
]]></content>
  </entry>
  <entry>
    <title>数据库基础</title>
    <url>/2023/07/26/AI/Mysql/db1/</url>
    <content><![CDATA[<h1 id="数据库"><a class="anchor" href="#数据库">#</a> 数据库</h1>
<h2 id="基础概念"><a class="anchor" href="#基础概念">#</a> 基础概念</h2>
<h3 id="数据库的概念"><a class="anchor" href="#数据库的概念">#</a> 数据库的概念</h3>
<ul>
<li>计算机内</li>
<li>组织性</li>
<li>可共享</li>
</ul>
<h3 id="数据"><a class="anchor" href="#数据">#</a> 数据</h3>
<ul>
<li>
<p>什么是数据</p>
<p>李明是个大学生，1972 年出生，男，江苏人，1990 年考入计算机系</p>
<ul>
<li>
<p>表现</p>
<p>文字和数字</p>
</li>
<li>
<p>解释</p>
<p>李明是个大学生，1972 年出生，男，江苏人，1990 年考入计算机系</p>
</li>
</ul>
</li>
</ul>
<h3 id="数据管理技术发展阶段"><a class="anchor" href="#数据管理技术发展阶段">#</a> 数据管理技术发展阶段</h3>
<ul>
<li>
<p>人工阶段</p>
<p>50 年代中期以前</p>
<ul>
<li>磁带</li>
<li>纸袋</li>
</ul>
</li>
<li>
<p>文件阶段</p>
<p>50 年代后期到 60 年代中期</p>
<ul>
<li>
<p>磁盘</p>
</li>
<li>
<p>数据处理方式</p>
<ul>
<li>批处理</li>
<li>实时处理</li>
</ul>
</li>
</ul>
</li>
<li>
<p>数据库系统阶段</p>
<p>60 年代后期</p>
<ul>
<li>实时处理</li>
<li>批处理</li>
<li>分布处理</li>
</ul>
</li>
</ul>
<h3 id="四大功能"><a class="anchor" href="#四大功能">#</a> 四大功能</h3>
<ul>
<li>定义</li>
<li>操纵</li>
<li>运行管理</li>
<li>建立和维护</li>
</ul>
<h3 id="表-列-记录"><a class="anchor" href="#表-列-记录">#</a> 表、列、记录</h3>
<ul>
<li>
<p>解释</p>
<ul>
<li>
<p><strong>表</strong></p>
<blockquote>
<blockquote>
<p>数据表 (或称表) 是数据库最重要的组成部分之一。数据库只是一个框架，数据表才是其实质内容。根据信息的分类情况，一个数据库中可能包含若干个数据表。</p>
</blockquote>
</blockquote>
</li>
<li>
<p><strong>列 (字段)</strong></p>
<blockquote>
<blockquote>
<p>在数据库中，对表的行和列都有特殊的叫法，每一列叫做一个 “字段”。每个字段包含某一专题的信息。就像 “通讯录” 数据库中，“姓名”、“联系电话” 这些都是表中所有行共有的属性，所以把这些列称为 “姓名” 字段和 “联系电话” 字段。</p>
</blockquote>
</blockquote>
</li>
<li>
<p><strong>记录 (行)</strong></p>
<blockquote>
<blockquote>
<p>表中的每一行叫做一个 “记录”，每一个记录包含这行中的所有信息，就像在通讯录数据库中某个人全部的信息，但记录在数据库中并没有专门的记录名，常常用它所在的行数表示这是第几个记录。</p>
</blockquote>
</blockquote>
</li>
<li>
<p><strong>值</strong></p>
<blockquote>
<blockquote>
<p>在数据库中存放在表行列交叉处的数据叫做 “值”，它是数据库中最基本的存储单元，它的位置要由这个表中的记录和字段来定义。</p>
</blockquote>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="实体"><a class="anchor" href="#实体">#</a> 实体</h3>
<p>实体是<strong>客观存在</strong>的可以<strong>被描述</strong>的事物，如汽车 飞机 人等。</p>
<h3 id="数据库实体"><a class="anchor" href="#数据库实体">#</a> 数据库实体</h3>
<blockquote>
<blockquote>
<p>数据库实体就是数据库管理系统中的不同管理对象。<br>
数据库管理系统中的各种用于数据管理方便而设定的各种数据管理对象<br>
如：数据库表、视图、存储过程等都是数据库实体。</p>
</blockquote>
</blockquote>
<h2 id="mysql的安装"><a class="anchor" href="#mysql的安装">#</a> mysql 的安装</h2>
<h2 id="库和表的基本操作"><a class="anchor" href="#库和表的基本操作">#</a> 库和表的基本操作</h2>
<h3 id="建库create-database"><a class="anchor" href="#建库create-database">#</a> 建库 (create database)</h3>
<p><code>create database persondb;</code> <br>
 <code>create database mydb character set utf8;</code></p>
<ul>
<li>删除数据库<br>
 <code>drop database  if exists  persondb;</code> <br>
 <code>drop database persondb;</code>
<ul>
<li>
<p>更改数据库编码</p>
<p><code>alter database mydb character set utf8;</code></p>
</li>
</ul>
</li>
<li>查看数据库<br>
 <code>show databases;</code></li>
<li>使用数据库<br>
 <code>use persondb;</code></li>
</ul>
<h3 id="建表create-table"><a class="anchor" href="#建表create-table">#</a> 建表 (create table)</h3>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">table</span> tb_emps<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    id <span class="token keyword">int</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    age <span class="token keyword">int</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><ul>
<li><code>int</code></li>
<li><code>varchar</code></li>
</ul>
<h3 id="查看表"><a class="anchor" href="#查看表">#</a> 查看表</h3>
<p><code>show tables;</code> <br>
<strong> 查看表结构：</strong></p>
<p><code>describe tb_emps;</code> <br>
 <code>desc tb_emps;</code></p>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>t_user<span class="token punctuation">`</span></span> <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8</pre></td></tr></table></figure><h3 id="alter"><a class="anchor" href="#alter">#</a> alter</h3>
<ul>
<li>
<p><strong>修改表名</strong>   <code>rename</code></p>
<p><code>alter table tb_emps rename t_user;</code></p>
<ul>
<li>将 <code>tb-emps</code>  改为 <code>t_user</code> <br>
 <code>show tables;</code></li>
</ul>
</li>
<li>
<p><strong>增加字段</strong>  <code>add</code> <br>
 <code>alter table t_user add address varchar(100);</code> <br>
<strong> 增强：</strong><br>
 <code>alter table t_user add sex varchar(10) after name;</code></p>
</li>
<li>
<p><strong>修改字段</strong>  <code>modify</code> <br>
 <code>alter table t_user modify address varchar(250);</code> <br>
<strong> 增强：</strong><br>
 <code>alter table t_user modify address varchar(250) after age;</code></p>
</li>
<li>
<p><strong>修改字段名称</strong>  <code>change</code></p>
</li>
</ul>
<p><code>alter table</code>  表名  <code>change</code>  现有字段名称  修改后字段名称  数据类型</p>
<ul>
<li>
<p><strong>修改字段顺序</strong></p>
<p><code>alter table t_user modify address varchar(250) after sex;</code></p>
</li>
<li>
<p><strong>删除字段</strong><br>
 <code>alter table t_user drop address;</code></p>
</li>
</ul>
<h3 id="查看表结构-desc"><a class="anchor" href="#查看表结构-desc">#</a> 查看表结构 desc</h3>
<h3 id="查看建表的sql语句"><a class="anchor" href="#查看建表的sql语句">#</a> 查看建表的 SQL 语句</h3>
<p><code>show create table t_emp;</code></p>
<h3 id="主键"><a class="anchor" href="#主键">#</a> 主键</h3>
<ul>
<li>表中经常有一个列或列的组合，其值能<strong>唯一地</strong>标识表中的每一行</li>
</ul>
<h2 id="基本类型"><a class="anchor" href="#基本类型">#</a> 基本类型</h2>
<h3 id="数字型"><a class="anchor" href="#数字型">#</a> 数字型</h3>
<ul>
<li>
<p>整型</p>
<ul>
<li><code>tinyint</code></li>
<li><code>smallint</code></li>
<li><code>mediumint</code></li>
<li><code>int/Integer</code></li>
<li><code>bigint</code></li>
</ul>
</li>
<li>
<p>浮点型</p>
<ul>
<li><code>float </code></li>
<li><code>double</code></li>
<li><code>decimal(m,n)</code></li>
</ul>
</li>
</ul>
<h3 id="字符型"><a class="anchor" href="#字符型">#</a> 字符型</h3>
<ul>
<li><code>char</code></li>
<li><code>varchar</code></li>
</ul>
<h3 id="二进制"><a class="anchor" href="#二进制">#</a> 二进制</h3>
<ul>
<li><code>tinyblob</code></li>
<li><code>mediumblob</code></li>
<li><code> bbb</code></li>
<li><code>longbbb</code></li>
</ul>
<h3 id="日期型"><a class="anchor" href="#日期型">#</a> 日期型</h3>
<ul>
<li><code>time</code> : 时分秒</li>
<li><code>date</code> : 年月日</li>
<li><code>year</code> : 年</li>
<li><code>datetime</code> ：年月日时分秒</li>
<li><code>timestamp</code> ：时间戳</li>
</ul>
<h2 id="sql-语句"><a class="anchor" href="#sql-语句">#</a> sql 语句</h2>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_emps <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">'周七'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#增加</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_emps <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">'李一'</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">)</span> <span class="token comment">#增加，不推荐使用</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_emps <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">'张二'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emps <span class="token keyword">where</span> age <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token comment">#查询</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emps <span class="token keyword">where</span> age <span class="token operator">is</span>  <span class="token boolean">null</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">update</span> t_emps <span class="token keyword">set</span> name <span class="token operator">=</span> <span class="token string">'张三'</span>  <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1006</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> t_emps<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">update</span> t_emps <span class="token keyword">set</span> age <span class="token operator">=</span> <span class="token number">25</span>   <span class="token comment">#更改</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1002</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">delete</span> <span class="token keyword">from</span> t_emps <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token string">'1005'</span>  <span class="token comment">#删除</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">delete</span> <span class="token keyword">from</span> t_emps<span class="token punctuation">;</span>  <span class="token comment">#备份</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emps <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token string">'1001'</span> <span class="token operator">or</span> id <span class="token operator">=</span> <span class="token string">'1002'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emps <span class="token keyword">where</span> id <span class="token operator">between</span> <span class="token number">1004</span> <span class="token operator">and</span> <span class="token number">1005</span>  </pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">select</span> name <span class="token keyword">as</span> <span class="token string">'姓名'</span> <span class="token keyword">from</span> t_emps<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> t_emps<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_emps <span class="token keyword">where</span> age <span class="token operator">is</span> <span class="token boolean">null</span></pre></td></tr></table></figure><h3 id="insert-update-delete-简单引入where-语句"><a class="anchor" href="#insert-update-delete-简单引入where-语句">#</a> insert ， update , delete  (简单引入 where 语句)</h3>
<h3 id="查询语句"><a class="anchor" href="#查询语句">#</a> 查询语句</h3>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">-</span> <span class="token keyword">select</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">-</span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>age <span class="token keyword">from</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">-</span> <span class="token keyword">select</span> name <span class="token keyword">as</span> <span class="token string">'姓名'</span> <span class="token keyword">from</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">-</span> selece age <span class="token operator">+</span> <span class="token number">10</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">(</span>加常量值或者字段相加<span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>
<p>where 子句</p>
<ul>
<li><code>age&gt;18</code></li>
<li><code>is  null</code></li>
<li><code>and</code>  ,  <code>or</code>  , <code>between</code></li>
</ul>
</li>
<li>
<p>聚合函数</p>
<ul>
<li>
<p><code>max</code></p>
</li>
<li>
<p><code>min</code></p>
</li>
<li>
<p><code>sum</code></p>
</li>
<li>
<p><code>avg</code></p>
<p><code>ceil()</code>  向上取整， <code>floor</code>  向下取整， <code>round</code>  四舍五入取整</p>
</li>
<li>
<p><code>count</code>  记录总数</p>
</li>
</ul>
</li>
<li>
<p>分组</p>
<ul>
<li>
<p><code>group by </code> <br>
 <code>select count(*),age from t_user group by age ;</code></p>
</li>
<li>
<p><code>having</code> <br>
 <code>select count(*),age from t_user group by age having count(*)=1;</code> <br>
tips：</p>
</li>
</ul>
</li>
<li>
<p><code>group by </code> <strong>只能</strong>和 <code>having</code>  用，<strong>不能</strong>和 <code>where</code>  用</p>
</li>
<li>
<p><code>select</code> <strong> 同时</strong>含有<strong>聚合函数和普通字段</strong>时使用 <code>group by </code></p>
</li>
<li>
<p>区别</p>
<ul>
<li><code>distinct </code> <br>
 <code>select distinct  name from t_user;</code>  排除重复</li>
</ul>
</li>
<li>
<p>排序</p>
<ul>
<li><code>asc</code>  正序</li>
<li><code>desc</code>  倒序</li>
</ul>
</li>
<li>
<p>limit</p>
</li>
</ul>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'tom'</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token comment">// 切片</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'%tom'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'_om'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token comment">// 模糊查询</span></pre></td></tr></table></figure><h2 id="sql语句汇总"><a class="anchor" href="#sql语句汇总">#</a> SQL 语句汇总</h2>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">use</span> aidb<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">database</span> mydb <span class="token keyword">character</span> <span class="token keyword">set</span> utf8<span class="token punctuation">;</span></pre></td></tr></table></figure><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">table</span> t_user<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="2"></td><td><pre>id <span class="token keyword">int</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>remark <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span>  <span class="token comment">#varchar 必须跟上长度</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">desc</span> t_user<span class="token punctuation">;</span></pre></td></tr></table></figure><h1 id="更改表-表名-动作-字段-字段类型"><a class="anchor" href="#更改表-表名-动作-字段-字段类型">#</a> 更改表、表名、动作、字段、字段类型</h1>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">table</span> t_user <span class="token keyword">add</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">table</span> t_user <span class="token keyword">modify</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">table</span> tb_emps <span class="token keyword">rename</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">table</span> t_user change address  address2 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">table</span> t_user <span class="token keyword">modify</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span> <span class="token keyword">after</span> sex<span class="token punctuation">;</span> <span class="token comment">#更改顺序</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">table</span> t_user <span class="token keyword">drop</span> address<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> t_user<span class="token punctuation">;</span></pre></td></tr></table></figure><h1 id="四大sql语句"><a class="anchor" href="#四大sql语句">#</a> 四大 sql 语句</h1>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span>  <span class="token comment">#查询语句</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">select</span> name <span class="token keyword">as</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>age <span class="token keyword">as</span> <span class="token string">'年龄'</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">select</span> name  <span class="token string">'姓名'</span> <span class="token punctuation">,</span>age <span class="token string">'年龄'</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">select</span> name  姓名 <span class="token punctuation">,</span>age 年龄 <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr></table></figure><h1 id="查询-增加-删除-更改"><a class="anchor" href="#查询-增加-删除-更改">#</a> 查询、增加、删除、更改</h1>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_user <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'eric'</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_user <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'grace'</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_user<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'grace'</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t_user<span class="token punctuation">(</span>name<span class="token punctuation">,</span>address<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'ALF'</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><h1 id="删除"><a class="anchor" href="#删除">#</a> 删除</h1>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">delete</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user </pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">delete</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">delete</span> <span class="token keyword">from</span> t_user </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span>  <span class="token comment">#查询语句</span></pre></td></tr></table></figure><h1 id="更新update"><a class="anchor" href="#更新update">#</a> 更新 update</h1>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">update</span> t_user <span class="token keyword">set</span> age <span class="token operator">=</span> <span class="token number">22</span>  <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span>age <span class="token operator">+</span> <span class="token number">20</span> <span class="token keyword">from</span> t_user</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span><span class="token string">'test'</span> <span class="token keyword">from</span> t_user</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> age<span class="token operator">&lt;</span><span class="token number">25</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> age<span class="token operator">=</span><span class="token number">20</span> <span class="token operator">or</span> age<span class="token operator">=</span><span class="token number">30</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> age<span class="token operator">>=</span><span class="token number">20</span> <span class="token operator">and</span> age<span class="token operator">&lt;=</span><span class="token number">25</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> age <span class="token operator">between</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">25</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> t_user <span class="token keyword">where</span> remark <span class="token operator">is</span> <span class="token boolean">null</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> t_user <span class="token keyword">where</span> remark <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span>  <span class="token comment">#查询语句</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age <span class="token keyword">from</span> t_user <span class="token keyword">group</span> <span class="token keyword">by</span> age<span class="token punctuation">;</span> <span class="token comment">#分组</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age <span class="token keyword">from</span> t_user <span class="token keyword">group</span> <span class="token keyword">by</span> age <span class="token keyword">where</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">#分组，错误用法</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age <span class="token keyword">from</span> t_user <span class="token keyword">group</span> <span class="token keyword">by</span> age <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">#分组过滤</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">select</span> <span class="token keyword">distinct</span> age <span class="token keyword">from</span> t_user<span class="token punctuation">;</span>  <span class="token comment">#去重</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">asc</span> <span class="token comment">#默认是升序排列，asc 是升序排列 </span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">desc</span> <span class="token comment">#desc 是降序排列</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span>  <span class="token comment">#mysql 没有 top 用法</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">limit</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'to%'</span> <span class="token comment">#模糊查询</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'%python%'</span> <span class="token comment">#模糊查询</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'_om_'</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'_o_'</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>人工智能</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>MYSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>多表连接</title>
    <url>/2023/08/06/AI/Mysql/db2/</url>
    <content><![CDATA[<h1 id="多表连接"><a class="anchor" href="#多表连接">#</a> 多表连接</h1>
<h2 id="练习"><a class="anchor" href="#练习">#</a> 练习</h2>
<h3 id="水果数据库创建"><a class="anchor" href="#水果数据库创建">#</a> 水果数据库创建</h3>
<ul>
<li>
<p>题目</p>
<ul>
<li>1. 增加新的水果信息</li>
<li>2. 更改 apple 的价格为 3.8</li>
<li>3. 按照价格从高到低进行排序</li>
<li>4. 使用 between 获取介于两个价格之间的水果信息</li>
<li>5. 显示每个水果记录的总金额</li>
<li>6. 计算平均价格，向下取整</li>
<li>7. 计算表中所有水果的总金额</li>
<li>8. 删除 ID 为 4 的记录信息</li>
</ul>
</li>
</ul>
<h3 id="处理数据"><a class="anchor" href="#处理数据">#</a> 处理数据</h3>
<ul>
<li>truncate</li>
<li>floor</li>
</ul>
<h2 id="外键"><a class="anchor" href="#外键">#</a> 外键</h2>
<h3 id="创建语句"><a class="anchor" href="#创建语句">#</a> 创建语句</h3>
<p><code>alter table t_user2 add constraint fk_user_deptment foreign</code></p>
<p><code>key(deptid) references deptment(deptid);</code></p>
<h2 id="连接查询"><a class="anchor" href="#连接查询">#</a> 连接查询</h2>
<ul>
<li>连接不仅可以在两个不同表之间进行，也可以是一个表和自身进行连接</li>
</ul>
<h2 id="注意事项"><a class="anchor" href="#注意事项">#</a> 注意事项</h2>
<h3 id="遇到聚合函数优先考虑group-by-having"><a class="anchor" href="#遇到聚合函数优先考虑group-by-having">#</a> 遇到聚合函数优先考虑 group by ...having</h3>
<h2 id="练习-2"><a class="anchor" href="#练习-2">#</a> 练习</h2>
<h3 id="多表连接-2"><a class="anchor" href="#多表连接-2">#</a> 多表连接</h3>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">table</span> t1<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>c1 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>c2 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">table</span> t2<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>c3 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>c4 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t1 <span class="token keyword">select</span> <span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> t2 <span class="token keyword">select</span> <span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'d'</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'f'</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token string">'h'</span><span class="token punctuation">,</span><span class="token string">'j'</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t2<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">inner</span> <span class="token keyword">join</span> t2<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">inner</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c1<span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">inner</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c2 <span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">left</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c1 <span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">left</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c2 <span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">right</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c1 <span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">right</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c2 <span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">left</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c1 <span class="token operator">=</span> c3</pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">union</span> </pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">right</span> <span class="token keyword">join</span> t2 <span class="token keyword">on</span> c1 <span class="token operator">=</span> c3<span class="token punctuation">;</span></pre></td></tr></table></figure><ul>
<li>初始表</li>
<li>表连接</li>
<li>in 使用</li>
<li>子查询</li>
</ul>
<h2 id="四种连接"><a class="anchor" href="#四种连接">#</a> 四种连接</h2>
<ul>
<li>
<p>inner join</p>
</li>
<li>
<p>left join</p>
</li>
<li>
<p>right join</p>
</li>
<li>
<p>full join</p>
</li>
</ul>
<h2 id="唯一性索引-补充"><a class="anchor" href="#唯一性索引-补充">#</a> 唯一性索引 - 补充</h2>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Persons</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>Id_P <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>LastName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>FirstName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>Address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>City <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">CONSTRAINT</span> uc_PersonID <span class="token keyword">UNIQUE</span> <span class="token punctuation">(</span>Id_P<span class="token punctuation">,</span>LastName<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> Persons</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> uc_PersonID <span class="token keyword">UNIQUE</span> <span class="token punctuation">(</span>Id_P<span class="token punctuation">,</span>LastName<span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="范式"><a class="anchor" href="#范式">#</a> 范式</h2>
<h3 id="1nf"><a class="anchor" href="#1nf">#</a> 1NF</h3>
<p>例如：学生信息表包含学生编号、学生姓名、班级编号和联系方式，其中联系方式不能将电话、地址和邮编合在一列显示，而是分为电话、地址和邮编合三列。</p>
<ul>
<li>每一列不可分割</li>
</ul>
<h3 id="2nf"><a class="anchor" href="#2nf">#</a> 2NF</h3>
<p>实体（表）的属性（字段）完全依赖于主码（主键），即不能存在仅依赖一部分的属性，如果存在应该分解成一个新表。例如成绩表，有学生编号，学生姓名，课程编号和成绩。其中学生姓名能够由学生的编号推出，所以不必放在这里。</p>
<p>会导致的问题，更新学生信息表的时候还需要同步来更新这个位置。</p>
<ul>
<li>实体的属性完全依赖于主码</li>
</ul>
<h3 id="3nf"><a class="anchor" href="#3nf">#</a> 3NF</h3>
<p>要求在一个数据库表中不包含在其他表中已包含的非主码信息。即第三范式就是属性不依赖于其他非主属性，也就是不存在传递依赖。例如班级信息表包含班级编号、班级名称、系名称、系简介，主码是班级编号。如果插入同一个系的两个班级信息，两条记录中系名称和系简介完全一样，产生大量冗余。可以分解为两个表，班级和系表，系表中有系的编号和名称。班级表只要加入系表的编码即可。</p>
<h2 id="数据完整性"><a class="anchor" href="#数据完整性">#</a> 数据完整性</h2>
<h3 id="实体完整性"><a class="anchor" href="#实体完整性">#</a> 实体完整性</h3>
<p>规定表的一行（即每一条记录）在表中是唯一的实体。实体完整性通过表的主键来实现。</p>
<p>主键的特点：不能为 null，必须有值，且不能重复。</p>
<h3 id="域完整性"><a class="anchor" href="#域完整性">#</a> 域完整性</h3>
<p>指数据库表的列（即字段）必须符合某种特定的数据类型或约束。</p>
<p>非空约束：not null<br>
 唯一约束：unique</p>
<pre><code>CREATE TABLE t6(

           idint PRIMARY KEY auto_increment,
           usernamevarchar(100) not null unique, 非空和唯一约束


                                                                             
           gendervarchar(10) not null  非空约束



);
</code></pre>
<h3 id="参照完整性"><a class="anchor" href="#参照完整性">#</a> 参照完整性</h3>
<p>参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。参照完整性又称引用完整性。</p>
]]></content>
      <categories>
        <category>人工智能</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>MYSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>多表连接和视图</title>
    <url>/2023/07/28/AI/Mysql/db3/</url>
    <content><![CDATA[<h1 id="多表连接和视图"><a class="anchor" href="#多表连接和视图">#</a> 多表连接和视图</h1>
<h2 id="查询练习"><a class="anchor" href="#查询练习">#</a> 查询练习</h2>
<ul>
<li>成绩表<br>
<img data-src="image/score.sql.png" alt="score"></li>
<li>学生表<br>
<img data-src="image/student.sql.png" alt="student"></li>
<li>班级表<br>
<img data-src="image/class.sql.png" alt="class"></li>
<li>课程表<br>
<img data-src="image/course.png" alt="course"></li>
<li>教师表<br>
<img data-src="image/teacher.sql.png" alt="teacher"></li>
</ul>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#1、查询 Student 表中的所有记录的 Sname、Ssex 和 Class 列。</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">select</span> sname<span class="token punctuation">,</span>ssex<span class="token punctuation">,</span>class <span class="token keyword">from</span> student</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#2、查询教师所有的单位即不重复的 Depart 列</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">select</span> <span class="token keyword">distinct</span> depart <span class="token keyword">from</span> teacher<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#3。查询 Student 表的所有记录。</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> student<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">#4 查询 Score 表中成绩在 60 到 80 之间的所有记录</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> score <span class="token keyword">where</span> degree<span class="token operator">&lt;</span><span class="token number">80</span> <span class="token operator">and</span> degree <span class="token operator">></span><span class="token number">60</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> score <span class="token keyword">where</span> degree <span class="token operator">between</span> <span class="token number">60</span> <span class="token operator">and</span> <span class="token number">80</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">#5 查询 Score 表中成绩为 85，86 或 88 的记录</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> score <span class="token keyword">where</span> degree<span class="token operator">=</span><span class="token number">85</span> <span class="token operator">or</span> degree<span class="token operator">=</span><span class="token number">85</span> <span class="token operator">or</span> degree <span class="token operator">=</span><span class="token number">88</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> score <span class="token keyword">where</span> degree <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">#6 查询 Student 表中 “95031” 班或性别为 “女” 的同学记录</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> student <span class="token keyword">where</span> class<span class="token operator">=</span><span class="token number">95031</span> <span class="token operator">or</span> ssex<span class="token operator">=</span><span class="token string">'女'</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">#7 以 Class 降序查询 Student 表的所有记录</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> student <span class="token keyword">order</span>  <span class="token keyword">by</span> class</pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#8 以 Cno 升序、Degree 降序查询 Score 表的所有记录</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> score <span class="token keyword">order</span> <span class="token keyword">by</span> cno<span class="token punctuation">,</span>degree <span class="token keyword">desc</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment">#9 查询 “95031” 班的学生人数</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> student <span class="token keyword">where</span> class<span class="token operator">=</span><span class="token number">95031</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token comment">#10 查询 Score 表中的最高分的学生学号和课程号。  （表自连）</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">select</span> sno<span class="token punctuation">,</span>cno <span class="token keyword">from</span> score <span class="token keyword">where</span> degree<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">from</span> score<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token comment">#in 既能处理单值也能处理多值</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">select</span> sno<span class="token punctuation">,</span>cno <span class="token keyword">from</span> score <span class="token keyword">where</span> degree <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">from</span> score<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token comment">#11 查询‘3-105’号课程的平均分</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">from</span> score <span class="token keyword">where</span> cno<span class="token operator">=</span><span class="token string">'3-105'</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token comment">#12 查询 Score 表中至少有 2 名学生选修的并以 3 开头的课程的平均分数</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>cno <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> cno<span class="token punctuation">;</span><span class="token comment">#所有学生选修的课程</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cno <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> cno <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">#所有学生至少有两名选修</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cno <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> cno <span class="token keyword">having</span> <span class="token function">count</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">2</span> <span class="token operator">and</span> cno <span class="token operator">like</span> <span class="token string">'3%'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">from</span> score</pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">where</span> cno <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> cno <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> cno <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">2</span> <span class="token operator">and</span> cno <span class="token operator">like</span> <span class="token string">'3%'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">as</span> 平均分<span class="token punctuation">,</span>cno <span class="token keyword">as</span> 课程号 <span class="token keyword">from</span> score</pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token keyword">where</span> cno <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> cno <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> cno <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">2</span> <span class="token operator">and</span> cno <span class="token operator">like</span> <span class="token string">'3%'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">group</span> <span class="token keyword">by</span> cno<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token comment">#13 查询最低分大于 70，最高分小于 90 的 Sno 列</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">as</span> mindegree <span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">as</span> maxdegree<span class="token punctuation">,</span>sno </pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token keyword">from</span> score </pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token keyword">group</span> <span class="token keyword">by</span> sno </pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token keyword">having</span> maxdegree<span class="token operator">&lt;</span><span class="token number">90</span> <span class="token operator">and</span> mindegree<span class="token operator">></span><span class="token number">70</span> <span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token comment">#</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span>sno<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>cno<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>degree <span class="token punctuation">,</span>t3<span class="token punctuation">.</span>cname</pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token keyword">from</span> student t1<span class="token punctuation">,</span>score t2<span class="token punctuation">,</span>course t3</pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token operator">and</span> t2<span class="token punctuation">.</span>cno<span class="token operator">=</span>t3<span class="token punctuation">.</span>cno</pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment">#14 查询所有学生的 Sname、Cno 和 Degree 列</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>cno<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>degree </pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token keyword">from</span> student t1<span class="token punctuation">,</span>score t2<span class="token punctuation">,</span>course t3</pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token operator">and</span> t2<span class="token punctuation">.</span>cno<span class="token operator">=</span>t3<span class="token punctuation">.</span>cno</pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token comment">#15 查询所有学生的 Sno、Cname 和 Degree 列</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span>sno<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>degree <span class="token punctuation">,</span>t3<span class="token punctuation">.</span>cname</pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token keyword">from</span> student t1<span class="token punctuation">,</span>score t2<span class="token punctuation">,</span>course t3</pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token operator">and</span> t2<span class="token punctuation">.</span>cno<span class="token operator">=</span>t3<span class="token punctuation">.</span>cno</pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token comment">#16 查询所有学生的 Sname、Cname 和 Degree 列</span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>degree <span class="token punctuation">,</span>t3<span class="token punctuation">.</span>cname</pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token keyword">from</span> student t1<span class="token punctuation">,</span>score t2<span class="token punctuation">,</span>course t3</pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token operator">and</span> t2<span class="token punctuation">.</span>cno<span class="token operator">=</span>t3<span class="token punctuation">.</span>cno</pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token comment">#17 查询 “95033” 班所选课程的平均分</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token keyword">select</span> sno <span class="token keyword">from</span> student <span class="token keyword">where</span> class <span class="token operator">=</span><span class="token string">'95033'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>degree <span class="token punctuation">)</span> <span class="token keyword">from</span> score t1<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token punctuation">(</span><span class="token keyword">select</span> sno <span class="token keyword">from</span> student <span class="token keyword">where</span> class <span class="token operator">=</span><span class="token string">'95033'</span><span class="token punctuation">)</span> t2</pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">,</span>cno <span class="token keyword">from</span> score t1<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token punctuation">(</span><span class="token keyword">select</span> sno <span class="token keyword">from</span> student <span class="token keyword">where</span> class <span class="token operator">=</span><span class="token string">'95033'</span><span class="token punctuation">)</span> t2</pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token keyword">group</span> <span class="token keyword">by</span> cno<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token comment">#18 请查询所有同学的 Sno、Cno 和 rank2 列。</span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">table</span> grade<span class="token punctuation">(</span>low <span class="token keyword">int</span><span class="token punctuation">,</span>upp <span class="token keyword">int</span><span class="token punctuation">,</span>rank2 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> grade <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> grade <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> grade <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> grade <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token keyword">insert</span> <span class="token keyword">into</span> grade <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token keyword">commit</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre></pre></td></tr><tr><td data-num="83"></td><td><pre><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> grade<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre></pre></td></tr><tr><td data-num="85"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span>sno<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>cno<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>degree<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>rank2</pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token keyword">from</span> score t1<span class="token punctuation">,</span>grade t2</pre></td></tr><tr><td data-num="87"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>degree</pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token operator">between</span> t2<span class="token punctuation">.</span>low <span class="token operator">and</span> t2<span class="token punctuation">.</span>upp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="89"></td><td><pre><span class="token comment">#19 查询选修 “3-105” 课程的成绩高于 “109” 号同学成绩的所有同学的记录</span></pre></td></tr><tr><td data-num="90"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> score <span class="token keyword">where</span> sno<span class="token operator">=</span><span class="token string">'109'</span> <span class="token operator">and</span> cno <span class="token operator">=</span><span class="token string">'3-105'</span></pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> student t1<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token punctuation">(</span><span class="token keyword">select</span> sno <span class="token keyword">from</span> score <span class="token keyword">where</span> degree <span class="token operator">></span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token punctuation">(</span><span class="token keyword">select</span> degree <span class="token keyword">from</span> score <span class="token keyword">where</span> sno<span class="token operator">=</span><span class="token string">'109'</span> <span class="token operator">and</span> cno<span class="token operator">=</span><span class="token string">'3-105'</span><span class="token punctuation">)</span><span class="token operator">and</span> cno<span class="token operator">=</span><span class="token string">'3-105'</span><span class="token punctuation">)</span> t2</pre></td></tr><tr><td data-num="95"></td><td><pre><span class="token keyword">where</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t2<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token comment">#20 查询 95033 班和 95031 班全体学生的记录</span></pre></td></tr><tr><td data-num="97"></td><td><pre><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> student <span class="token keyword">where</span> class <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'95033'</span><span class="token punctuation">,</span><span class="token string">'95031'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="98"></td><td><pre><span class="token comment">#21 查询存在有 85 分以上成绩的课程 Cno.</span></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token keyword">select</span> <span class="token keyword">distinct</span>  sno <span class="token keyword">from</span> score <span class="token keyword">where</span> degree<span class="token operator">></span><span class="token number">85</span></pre></td></tr><tr><td data-num="100"></td><td><pre><span class="token comment">#22 查询出 “计算机系” 教师所教课程的成绩表</span></pre></td></tr><tr><td data-num="101"></td><td><pre><span class="token keyword">select</span> tno <span class="token keyword">from</span> teacher <span class="token keyword">where</span> depart<span class="token operator">=</span><span class="token string">'计算机系'</span></pre></td></tr><tr><td data-num="102"></td><td><pre></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token keyword">select</span> t1<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>t2<span class="token punctuation">.</span>cno<span class="token punctuation">,</span>degree <span class="token punctuation">,</span>t3<span class="token punctuation">.</span>cno <span class="token keyword">from</span> student t1<span class="token punctuation">,</span> course t2<span class="token punctuation">,</span>（<span class="token keyword">select</span> tno <span class="token keyword">from</span> teacher <span class="token keyword">where</span> depart<span class="token operator">=</span><span class="token string">'计算机系'</span>） t3<span class="token punctuation">,</span>score t4</pre></td></tr><tr><td data-num="104"></td><td><pre><span class="token keyword">where</span> t2<span class="token punctuation">.</span> tno<span class="token operator">=</span>t3<span class="token punctuation">.</span>tno</pre></td></tr><tr><td data-num="105"></td><td><pre><span class="token operator">and</span> t1<span class="token punctuation">.</span>sno<span class="token operator">=</span>t4<span class="token punctuation">.</span>sno</pre></td></tr><tr><td data-num="106"></td><td><pre><span class="token operator">and</span> t2<span class="token punctuation">.</span>cno<span class="token operator">=</span> t4<span class="token punctuation">.</span>cno</pre></td></tr></table></figure><h2 id="sql分析"><a class="anchor" href="#sql分析">#</a> SQL 分析</h2>
<h3 id="创建"><a class="anchor" href="#创建">#</a> 创建</h3>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">view</span> v_user_dept</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">as</span> </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">select</span> a<span class="token punctuation">.</span>name<span class="token punctuation">,</span> b<span class="token punctuation">.</span>deptname</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> t_user a<span class="token punctuation">,</span> t_deptment b</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">where</span> a<span class="token punctuation">.</span>deptid <span class="token operator">=</span> b<span class="token punctuation">.</span>deptid<span class="token punctuation">;</span></pre></td></tr></table></figure><ul>
<li>单表</li>
</ul>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">view</span> v_user <span class="token keyword">as</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr></table></figure><ul>
<li>别名</li>
</ul>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">view</span> view_t<span class="token punctuation">(</span>username<span class="token punctuation">,</span>userage<span class="token punctuation">,</span>useraddress<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">as</span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>address <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr></table></figure><ul>
<li>多表</li>
</ul>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token keyword">view</span> v_user_dept</pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">as</span> </pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token keyword">select</span> a<span class="token punctuation">.</span>name<span class="token punctuation">,</span> b<span class="token punctuation">.</span>deptname</pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token keyword">from</span> t_user a<span class="token punctuation">,</span> t_deptment b</pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token keyword">where</span> a<span class="token punctuation">.</span>deptid <span class="token operator">=</span> b<span class="token punctuation">.</span>deptid<span class="token punctuation">;</span></pre></td></tr></table></figure><h3 id="查看"><a class="anchor" href="#查看">#</a> 查看</h3>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">describe</span> view_t<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">view</span> view_t<span class="token punctuation">;</span></pre></td></tr></table></figure><h3 id="修改"><a class="anchor" href="#修改">#</a> 修改</h3>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">create</span> <span class="token operator">or</span> <span class="token keyword">replace</span> <span class="token keyword">view</span> view_t  <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_deptment<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">alter</span> <span class="token keyword">view</span> view_t <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_user<span class="token punctuation">;</span></pre></td></tr></table></figure><h3 id="更新"><a class="anchor" href="#更新">#</a> 更新</h3>
<p><code>update view_t set deptid = 4 where id = 3;</code></p>
<h3 id="删除"><a class="anchor" href="#删除">#</a> 删除</h3>
<p><code>drop view v_user_dept;</code></p>
<h2 id="python结合sql"><a class="anchor" href="#python结合sql">#</a> Python 结合 sql</h2>
<h3 id="增加py"><a class="anchor" href="#增加py">#</a> <span class="exturl" data-url="aHR0cDovL3huLS15ZnI1MmwucHk=">增加.py</span></h3>
<p><strong>pip install pymysql  加入第三方库到 python，或者 pip uninstall pymysql</strong></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> pymysql</pre></td></tr><tr><td data-num="2"></td><td><pre>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>database<span class="token operator">=</span><span class="token string">'mytest'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>cur <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>myid <span class="token operator">=</span> <span class="token number">1002</span></pre></td></tr><tr><td data-num="2"></td><td><pre>myname <span class="token operator">=</span> <span class="token string">'赵云'</span></pre></td></tr><tr><td data-num="3"></td><td><pre>myage <span class="token operator">=</span> <span class="token number">28</span></pre></td></tr><tr><td data-num="4"></td><td><pre>sql <span class="token operator">=</span> <span class="token string">"insert into t_emps(id,name,age) values(%d,'%s',%d)"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>myid<span class="token punctuation">,</span>myname<span class="token punctuation">,</span>myage<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#事务提交</span></pre></td></tr><tr><td data-num="7"></td><td><pre>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="删除py"><a class="anchor" href="#删除py">#</a> <span class="exturl" data-url="aHR0cDovL3huLS1iY3IzNzduLnB5">删除.py</span></h3>
<p><code>sql = &quot;insert into t_emps(id,name,age) values(%d,'%s',%d)&quot; % (1001,'张飞',30)</code></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>myid <span class="token operator">=</span> <span class="token number">1002</span></pre></td></tr><tr><td data-num="2"></td><td><pre>myname <span class="token operator">=</span> <span class="token string">'黄忠'</span></pre></td></tr><tr><td data-num="3"></td><td><pre>sql <span class="token operator">=</span> <span class="token string">"delete from t_emps where id = %d "</span> <span class="token operator">%</span> <span class="token punctuation">(</span>myid<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#事务提交</span></pre></td></tr><tr><td data-num="6"></td><td><pre>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="修改py"><a class="anchor" href="#修改py">#</a> <span class="exturl" data-url="aHR0cDovL3huLS04dXF5MjNjLnB5">修改.py</span></h3>
<p><code>sql = &quot;insert into t_emps(id,name,age) values(%d,'%s',%d)&quot; % (1001,'张飞',30)</code></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>myid <span class="token operator">=</span> <span class="token number">1002</span></pre></td></tr><tr><td data-num="2"></td><td><pre>myname <span class="token operator">=</span> <span class="token string">'黄忠'</span></pre></td></tr><tr><td data-num="3"></td><td><pre>sql <span class="token operator">=</span> <span class="token string">"update t_emps set name = '%s' where id = %d "</span> <span class="token operator">%</span> <span class="token punctuation">(</span>myname<span class="token punctuation">,</span>myid<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#事务提交</span></pre></td></tr><tr><td data-num="6"></td><td><pre>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="查询py"><a class="anchor" href="#查询py">#</a> <span class="exturl" data-url="aHR0cDovL3huLS1qdnYwNDFmLnB5">查询.py</span></h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> pymysql</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>database<span class="token operator">=</span><span class="token string">'mytest'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>cur <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>sql <span class="token operator">=</span> <span class="token string">"select * from student"</span></pre></td></tr><tr><td data-num="6"></td><td><pre>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>result <span class="token operator">=</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#数据集</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment"># print(result)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">for</span> row <span class="token keyword">in</span> result<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token comment"># sno = row[0]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment"># sname = row[1]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token comment"># print(sno,sname)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>人工智能</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>MYSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习基本概念</title>
    <url>/2023/08/02/AI/Machine%20Learning/course-1/</url>
    <content><![CDATA[<h1 id="机器学习"><a class="anchor" href="#机器学习">#</a> 机器学习</h1>
<p><strong>常用概念</strong></p>
<ul>
<li><strong>成本</strong>：是衡量模型与训练样本符合程度的指标，也即是针对所有的训练成本，模型拟合出来的值与训练样本的真实值的误差平均值。</li>
<li><strong>成本函数</strong>：成本与模型参数的函数关系</li>
<li><strong>模型训练</strong>：模型训练的过程，就是找出合适的模型参数，使得成本函数的值最小。也即是训练这个模型的目标。找出合适的模型参数，使得所有的点到直线上的距离最短</li>
<li><strong>模型准确性</strong>：数据集一般分为<strong>训练数据集</strong>和<strong>测试数据集</strong>，划分的原则是 <code>8:2</code>  或者 <code>7:3</code> ，然后用<strong>训练集数据</strong>来训练模型，训练出来模型参数后再使用<strong>测试数据集</strong>来测试模型的准确性，并根据模型的准确性来评价模型的性能。</li>
<li><strong>过拟合</strong>：指模型能<strong>很好的</strong>拟和训练样本，但对新数据的预测准确性很差
<ul>
<li>原因：模型学习到的样本的特征太少<br>
解决办法：增加样本的特征数量 （多项式回归，直线变曲线）<br>
<img data-src="image/overfitting.png" alt="过拟合"></li>
</ul>
</li>
<li><strong>欠拟合</strong>：指模型<strong>不能很好的</strong>拟合训练样本，且对新数据的预测准确性也不好
<ul>
<li>原因：原始特征过多，存在一些嘈杂特征<br>
解决办法：（大波浪变小波浪）
<ul>
<li>进行特征选择，消除关联性大的特征（比较难处理）</li>
<li><strong>正则化值岭回归</strong><br>
<img data-src="image/underfitting.png" alt="欠拟合"></li>
</ul>
</li>
</ul>
</li>
<li><strong>拟合</strong><br>
<img data-src="image/just_right.png" alt="拟合"></li>
</ul>
<h2 id="监督学习"><a class="anchor" href="#监督学习">#</a> 监督学习</h2>
<ul>
<li>利用带有标签（已知输出）的训练数据来训练一个模型，以便该模型能够对未知数据进行预测和泛化</li>
</ul>
<h3 id="主要步骤"><a class="anchor" href="#主要步骤">#</a> 主要步骤</h3>
<ol>
<li><strong>收集数据</strong>：比如从爬虫网站抽取数据、设备发来的实测数据，公开可用的数据源等。</li>
<li><strong>准备输入数据</strong>：得到数据之后，确定数据格式是否符合要求，此处需要注意有些算法要求<strong>目标变量</strong>和<strong>特征值</strong>是字符串类型，而另一些算法则尽可能要求是整数类型。</li>
<li><strong>分析输入数据</strong>：确保数据不是空值或者数据集中没有垃圾数据，如果信任数据源可以跳过否则人工干预降低系统的价值。</li>
<li><strong>训练算法</strong>：将前两步得到的格式化数据输入算法，从中抽取知识或信息。如果是无监督算法，因为不存在目标变量值，故而不需要训练算法</li>
<li><strong>测试算法</strong>：进一步将实际应用第四步机器学习得到的知识信息</li>
<li><strong>使用算法</strong>：将机器算法转换为应用程序，执行实际任务。</li>
</ol>
<h3 id="算法的选择"><a class="anchor" href="#算法的选择">#</a> 算法的选择</h3>
<h4 id="使用目的"><a class="anchor" href="#使用目的">#</a> 使用目的</h4>
<ul>
<li>想要<strong>预测目标变量</strong>的值，选择<strong>监督学习</strong>算法
<ul>
<li>如果目标是<strong>连续的数值</strong>，如 <code>0.0-99.0</code> ， <code>-1000~100000</code>  则选择<strong>回归算法</strong></li>
<li>如果目标是<strong>离散型</strong>，如 <code>是/否</code> ， <code>A/B/C</code> , <code>1/2/3</code> , <code>红/黑/黄</code> 则选择<strong>分类器算法</strong></li>
</ul>
</li>
<li><strong>不想预测目标变量</strong>的值，选择<strong>无监督学习</strong>算法
<ul>
<li>划分为离散的组是唯一需求，选择<strong>聚类算法</strong></li>
<li>还需估计数据与每个分组的相似程度，选择<strong>密度估计算法</strong></li>
</ul>
</li>
</ul>
<h4 id="数据问题"><a class="anchor" href="#数据问题">#</a> 数据问题</h4>
<ul>
<li>重点考虑<strong>特征值</strong>是<strong>离散变量</strong>还是<strong>连续型变量</strong>，是否存在<strong>缺失</strong>的值，何种<strong>原因</strong>造成的缺失，数据中是否存在<strong>异常值</strong>，某个特征发生的<strong>频率</strong>如何。</li>
</ul>
<h3 id="应用"><a class="anchor" href="#应用">#</a> 应用</h3>
<ul>
<li><strong>图像分类</strong>：根据图像的特征将其分类为不同的对象或类别，如识别动物、车辆等。</li>
<li><strong>文本分类</strong>：将文本数据分类为不同的类别，如情感分类、垃圾邮件过滤等。</li>
<li><strong>回归问题</strong>：预测数值型输出，例如房价预测、销售预测等。</li>
<li><strong>语音识别</strong>：将语音数据转换为文字，用于语音助手、语音翻译等。</li>
<li><strong>医疗诊断</strong>：根据病人的症状和医疗数据进行疾病预测和诊断。</li>
</ul>
<h2 id="模型误差"><a class="anchor" href="#模型误差">#</a> 模型误差</h2>
<p><strong>模型误差 = 偏差（Bias）+ 方差（Variance）+ 不可避免的误差</strong></p>
<ul>
<li>误方差</li>
<li><img data-src="image/wufangcha.png" alt></li>
</ul>
<h3 id="偏差bias"><a class="anchor" href="#偏差bias">#</a> 偏差（Bias）</h3>
<ul>
<li>导致偏差的主要原因：对问题本身的假设不正确，如非线性数据使用线性回归</li>
</ul>
<h3 id="方差variance"><a class="anchor" href="#方差variance">#</a> 方差 (Variance)</h3>
<ul>
<li>数据的一点点扰动都会较大的影响模型，如使用的模型太复杂像高阶多项式回归</li>
<li><strong>解决高方差的通常手段</strong>：
<ol>
<li>降低模型复杂度</li>
<li>减少数据维度；降噪</li>
<li>增加样本数</li>
<li>使用验证集</li>
<li>模型的正则化</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>人工智能</category>
        <category>机器学习</category>
      </categories>
  </entry>
  <entry>
    <title>机器学习步骤、线性回归，岭回归，Lasso回归，K近邻算法</title>
    <url>/2023/08/06/AI/Machine%20Learning/course-2/</url>
    <content><![CDATA[<h1 id="机器学习"><a class="anchor" href="#机器学习">#</a> 机器学习</h1>
<h2 id="案例a"><a class="anchor" href="#案例a">#</a> 案例 A</h2>
<h3 id="boston"><a class="anchor" href="#boston">#</a> boston</h3>
<ul>
<li>包</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> sklearn <span class="token keyword">import</span> datasets</pre></td></tr></table></figure><ul>
<li>导入数据</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>boston<span class="token operator">=</span>datasets<span class="token punctuation">.</span>load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>boston<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="3"></td><td><pre>boston<span class="token punctuation">.</span>target<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span></pre></td></tr></table></figure><ul>
<li>提取特征和目标变量</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>x<span class="token operator">=</span>boston<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>  <span class="token comment">#每套房产的平均个数</span></pre></td></tr><tr><td data-num="2"></td><td><pre>y<span class="token operator">=</span>boston<span class="token punctuation">.</span>target</pre></td></tr></table></figure><ul>
<li>
<p>绘制散点图</p>
<ul>
<li><code>plt.scatter(x,y)</code></li>
</ul>
</li>
<li>
<p>导入模型</p>
</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_section <span class="token keyword">import</span> train_test_split</pre></td></tr><tr><td data-num="2"></td><td><pre>x_train<span class="token punctuation">,</span>x_test<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>y_test<span class="token operator">=</span>train_test_split<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#划分测试集和训练集</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>liner_model <span class="token keyword">import</span> LinearRegression  <span class="token comment">#导入线性回归算法</span></pre></td></tr></table></figure><ul>
<li>训练数据</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>X_train<span class="token operator">=</span>x_train<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>x_test<span class="token operator">=</span>x_test<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>生成模型</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>reg<span class="token operator">=</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#创建线性回归模型 `</span></pre></td></tr><tr><td data-num="2"></td><td><pre>reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>   <span class="token comment">#模型训练</span></pre></td></tr><tr><td data-num="3"></td><td><pre>coef<span class="token operator">=</span>reg<span class="token punctuation">.</span>coef_<span class="token comment">#斜率</span></pre></td></tr><tr><td data-num="4"></td><td><pre>intercept<span class="token operator">=</span>reg<span class="token punctuation">.</span>intercept_<span class="token comment">#截距</span></pre></td></tr></table></figure><ul>
<li>预测</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>y_predict<span class="token operator">=</span>reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#在测试集上进行预测</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span><span class="token comment">#测试散点图</span></pre></td></tr><tr><td data-num="4"></td><td><pre>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_predict<span class="token punctuation">)</span><span class="token comment">#预测散点图</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">//</span>绘制散点图</pre></td></tr></table></figure><h3 id="找特征值"><a class="anchor" href="#找特征值">#</a> 找特征值</h3>
<ul>
<li>包</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"><span>n </span></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>liner_model <span class="token keyword">import</span> LinearRegression</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> sklearn <span class="token keyword">import</span> datasets</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split</pre></td></tr></table></figure><ul>
<li>导入模型</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>boston<span class="token operator">=</span>datasets<span class="token punctuation">.</span>load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>x<span class="token operator">=</span>boston<span class="token punctuation">.</span>data</pre></td></tr><tr><td data-num="3"></td><td><pre>y<span class="token operator">=</span>boston<span class="token punctuation">.</span>targe</pre></td></tr><tr><td data-num="4"></td><td><pre>x_train<span class="token punctuation">,</span>x_test<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>y_test<span class="token operator">=</span>train_test_split<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>生成模型</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>lin_reg<span class="token operator">=</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  lin_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  lin_reg<span class="token punctuation">.</span>coef_</pre></td></tr><tr><td data-num="4"></td><td><pre>  lin_reg<span class="token punctuation">.</span>intercept_</pre></td></tr></table></figure><ul>
<li>
<p>排序</p>
<ul>
<li>
<p><strong>按照值的索引排序</strong></p>
<ul>
<li><code>boston.feature_names[np.argsort(lin_reg.coef_)]</code></li>
</ul>
</li>
<li>
<p><strong>按照值排序</strong></p>
<ul>
<li><code>np.sort(lin_reg.coef_)</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="回归曲线"><a class="anchor" href="#回归曲线">#</a> 回归曲线</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#包</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#导入数据</span></pre></td></tr><tr><td data-num="5"></td><td><pre>x<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token comment">#生成随机数</span></pre></td></tr><tr><td data-num="6"></td><td><pre>X<span class="token operator">=</span>xreshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#一维特征数据转换为二维特征矩阵</span></pre></td></tr><tr><td data-num="7"></td><td><pre>y<span class="token operator">=</span><span class="token number">0.5</span><span class="token operator">*</span>x<span class="token operator">*</span>x<span class="token operator">+</span>x<span class="token operator">+</span><span class="token number">2</span><span class="token operator">+</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token comment">#噪音</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#导入模型</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>Linear_model <span class="token keyword">import</span> LinearRegression<span class="token comment">#线性回归算法</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> PolynomialFeatures<span class="token comment">#多项式</span></pre></td></tr><tr><td data-num="11"></td><td><pre>poly<span class="token operator">=</span>PolynomialFeatures<span class="token punctuation">(</span>degree<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#声明二次多项式</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">#训练数据</span></pre></td></tr><tr><td data-num="13"></td><td><pre>X2<span class="token operator">=</span>poly<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token comment">#转换格式</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">#生成模型</span></pre></td></tr><tr><td data-num="15"></td><td><pre>lin_reg2<span class="token operator">=</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>lin_reg2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X2<span class="token punctuation">,</span>y<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#测试</span></pre></td></tr><tr><td data-num="18"></td><td><pre>y_predict2<span class="token operator">=</span>lin_reg2<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y_predict2<span class="token punctuation">)</span></pre></td></tr></table></figure><p>tips:</p>
<ul>
<li><code>+np.random.normal(0,1,100)添加噪音,防止过拟合</code></li>
<li><code>poly=PolynomialFeatures(degree=n)#声明n次多项式</code></li>
<li><code>X2=poltnomialFeatures(X)#转换为多项式</code></li>
</ul>
<h2 id="案例b"><a class="anchor" href="#案例b">#</a> 案例 B</h2>
<h3 id="pipeline"><a class="anchor" href="#pipeline">#</a> Pipeline</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#包</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> PolynomialFeatures<span class="token comment">#多项式</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandadScaler<span class="token comment">#标准化</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#导入数据</span></pre></td></tr><tr><td data-num="7"></td><td><pre>x<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>unifrom<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>y<span class="token operator">=</span><span class="token number">0.5</span><span class="token operator">*</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span>x<span class="token operator">+</span>np<span class="token punctuation">.</span>rrandom<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">#导入模型</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression<span class="token comment">#线性回归</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>pipline <span class="token keyword">import</span> Pipeline<span class="token comment">#pipeline 管道</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split<span class="token comment">#划分训练集和测试集</span></pre></td></tr><tr><td data-num="13"></td><td><pre>x_train<span class="token punctuation">,</span>x_test<span class="token punctuation">,</span>y_train<span class="token punctuation">.</span>y_test<span class="token operator">=</span>train_test_split<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">#训练数据</span></pre></td></tr><tr><td data-num="15"></td><td><pre>X_train<span class="token operator">=</span>x_train<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>X_test<span class="token operator">=</span>x_test<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>poly_reg<span class="token operator">=</span>Pipeline<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token punctuation">[</span></pre></td></tr><tr><td data-num="19"></td><td><pre>			<span class="token punctuation">(</span><span class="token string">'poly'</span><span class="token punctuation">,</span>PolynomialFeatures<span class="token punctuation">(</span>degree<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">#多项式</span></pre></td></tr><tr><td data-num="20"></td><td><pre>			<span class="token punctuation">(</span><span class="token string">'Std_scaler'</span><span class="token punctuation">,</span>StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">#标准化</span></pre></td></tr><tr><td data-num="21"></td><td><pre>			<span class="token punctuation">(</span><span class="token string">'lin_reg'</span><span class="token punctuation">,</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#线性回归</span></pre></td></tr><tr><td data-num="22"></td><td><pre>		<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token comment">#pipeline 通道</span></pre></td></tr><tr><td data-num="25"></td><td><pre>poly_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token comment">#生成模型</span></pre></td></tr><tr><td data-num="27"></td><td><pre>y_predict<span class="token operator">=</span>poly_reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_predict<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span><span class="token punctuation">,</span>y_predict<span class="token punctuation">[</span>np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token comment">#预测</span></pre></td></tr></table></figure><p>tips：</p>
<ul>
<li><code>import sklearn.pipeline import Pipeline</code></li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>poly_reg<span class="token operator">=</span>Pipeline<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="2"></td><td><pre>		<span class="token punctuation">[</span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token punctuation">(</span><span class="token string">'poly'</span><span class="token punctuation">,</span>PolynomialFeatures<span class="token punctuation">(</span>degree<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">#多项式</span></pre></td></tr><tr><td data-num="4"></td><td><pre>			<span class="token punctuation">(</span><span class="token string">'Std_scaler'</span><span class="token punctuation">,</span>StandardScaaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token comment">#标准化</span></pre></td></tr><tr><td data-num="5"></td><td><pre>			<span class="token punctuation">(</span><span class="token string">'lin_reg'</span><span class="token punctuation">,</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment">#线性回归算法</span></pre></td></tr><tr><td data-num="6"></td><td><pre>		<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li><code>plt.plot(np.sort(x_test),y_predict[np.argsort(x_test)],color='y')</code></li>
</ul>
<h3 id="回归算法"><a class="anchor" href="#回归算法">#</a> 回归算法</h3>
<ul>
<li>
<p><strong>岭回归</strong></p>
<ul>
<li>
<p>包</p>
<ul>
<li><code>import sklearn.linear_model import Ridge</code></li>
</ul>
</li>
<li>
<p>算法</p>
</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">RidgeRegression</span><span class="token punctuation">(</span>degree<span class="token punctuation">,</span>alpha<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  	<span class="token keyword">return</span> Pipeline<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  		<span class="token punctuation">[</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  			<span class="token punctuation">(</span><span class="token string">'poly'</span><span class="token punctuation">,</span>PolynomialFeatures<span class="token punctuation">(</span>degree<span class="token operator">=</span>degree<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  			<span class="token punctuation">(</span><span class="token string">'std_scaler'</span><span class="token punctuation">,</span>StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  			<span class="token punctuation">(</span><span class="token string">'Ridge'</span><span class="token punctuation">,</span>Ridge<span class="token punctuation">(</span>alpha<span class="token operator">=</span>alpha<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  		<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>
<p>生成模型</p>
<ul>
<li><code>ridge_reg=RidgeRegression(degree=100,alpha=0.001)</code></li>
<li><code>ridge_reg.fit(X_train,y_train)</code></li>
</ul>
</li>
<li>
<p>预测</p>
<ul>
<li><code>y_predict=ridge_reg.predict(X_test))</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>tips：</strong></p>
<ul>
<li>
<p><code>from skelarn.metrics import mean_squared_error</code>  均方根误差</p>
</li>
<li>
<p><code>from sklearn.metrics import mean_absolute_error</code>  绝对值误差</p>
<ul>
<li><code>mean_squared_error(y_testmy_predict)</code></li>
</ul>
</li>
<li>
<p>Lasso</p>
<ul>
<li>
<p>包</p>
<ul>
<li><code>from sklearn.linear_model import Lasso</code></li>
</ul>
</li>
<li>
<p>算法</p>
</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">LassoRegression</span><span class="token punctuation">(</span>degree<span class="token punctuation">,</span>alpha<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  	<span class="token keyword">return</span> Pipeline<span class="token punctuation">(</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  		<span class="token punctuation">[</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  			<span class="token punctuation">(</span><span class="token string">'poly'</span><span class="token punctuation">,</span>PolynomialFeatures<span class="token punctuation">(</span>degree<span class="token operator">=</span>degree<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  			<span class="token punctuation">(</span><span class="token string">'std_scaler'</span><span class="token punctuation">,</span>StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  			<span class="token punctuation">(</span><span class="token string">'Lasso'</span><span class="token punctuation">,</span>Lasso<span class="token punctuation">(</span>alpha<span class="token operator">=</span>alpha<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  		<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>
<p>生成模型</p>
<ul>
<li><code>lasso_reg=LassoRegression(degree=100,alpha=0.001)</code></li>
<li><code>lasso_reg.fit(X_train,y_train)</code></li>
</ul>
</li>
<li>
<p>预测</p>
<ul>
<li><code>y_predict=lasso_reg.predict(X_test)</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="案例c"><a class="anchor" href="#案例c">#</a> 案例 C</h2>
<h3 id="k近邻算法"><a class="anchor" href="#k近邻算法">#</a> K 近邻算法</h3>
<p><strong>既能回归，也能分类</strong></p>
<ul>
<li>
<p>包<br>
 <code>from sklearn.neighbors import  KNeighborsClassifier</code></p>
</li>
<li>
<p>导入数据</p>
</li>
</ul>
<pre><code class="language-Python">    digits=datasets.load_digits()
	X=digits.data
	y=digits.target
	some_digit_image=some_digit.reshape(8,8)
	plt.imshow(some_digit_image,cmap=matplotlib.cm.binary)
</code></pre>
<ul>
<li>导入模型</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>neighbors <span class="token keyword">import</span> KNeighborsClassifier</pre></td></tr><tr><td data-num="2"></td><td><pre>	<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split</pre></td></tr><tr><td data-num="3"></td><td><pre>	X_train<span class="token punctuation">,</span>X_test<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>y_test<span class="token operator">=</span>train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">.</span>test<span class="token operator">-</span>size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>
<p>生成模型</p>
<ul>
<li>
<p><code>knn_clf=KNeighborsClassifier()</code></p>
<ul>
<li><code>n_neighbors</code> : 邻居数量<br>
 <code> p</code> : 明可夫斯基超参数<br>
 <code>weight</code> ：普通 <code>uniform</code>  或者权重 <code>distance</code>  的近邻算法</li>
</ul>
</li>
<li>
<p><code>knn_clf.fit(X_train,y_train)</code></p>
</li>
</ul>
</li>
<li>
<p>预测</p>
</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>y_predict<span class="token operator">=</span>knn_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre> <span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score</pre></td></tr><tr><td data-num="3"></td><td><pre> accuary_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_predict<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre> knn_clf<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span>y_test<span class="token punctuation">)</span></pre></td></tr></table></figure><p>tips:</p>
<ul>
<li>k 近邻算法只能看得分，不能计算误方差</li>
</ul>
]]></content>
      <categories>
        <category>人工智能</category>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习 -</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2023/07/26/AI/python/fruitMarket/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>列表、元组、字典、集合</title>
    <url>/2023/07/17/AI/python/week1/</url>
    <content><![CDATA[<h2 id="课堂笔记"><a class="anchor" href="#课堂笔记">#</a> 课堂笔记</h2>
<h2 id="列表"><a class="anchor" href="#列表">#</a> 列表</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token builtin">list</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">19.5</span><span class="token punctuation">,</span><span class="token string">"wisp"</span><span class="token punctuation">,</span><span class="token string">"uu"</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">'wang'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token builtin">str</span><span class="token operator">=</span><span class="token string">"10,63,17,89,16,31"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment"># 列表</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#追加列表中的数据</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">19.2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">#移除列表中的指定数据</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">#删除索引为‘1’的列表数据</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">#在索引为‘3’的位置添加数据</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'wisp'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">#查找指定数据在列表中的索引，没有会报错</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">#查找指定数据在列表中的个数</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#清除列表中的所有数据</span></pre></td></tr><tr><td data-num="18"></td><td><pre>list1<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment">#将字符串类型转换为列表类型</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>extend<span class="token punctuation">(</span>list1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token comment">#将 list1 列表中的数据追加到原列表中</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token comment">#对列表数据正序排序</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token comment">#对列表数据倒序排序</span></pre></td></tr><tr><td data-num="26"></td><td><pre>list2<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token comment">#将列表中的数据复制给 list2</span></pre></td></tr></table></figure><p>tips:</p>
<ul class="task-list">
<li>数组和列表都使用  <code>[ ]</code> , 但是列表的可以放入任意的类型 ，数组的类型是唯一的，比如整型就是整型</li>
<li>不能将整型强制转换成列表类型，可以先把整形转换成字符串类型，再转换成列表类型</li>
<li class="task-list-item"><input type="checkbox" id="cbx_0" checked="true" disabled="true"><label for="cbx_0">  <code>list(str(int))</code> </label></li>
</ul>
<h2 id="元组"><a class="anchor" href="#元组">#</a> 元组</h2>
<pre><code class="language-Python">tuple=(10,15.9,'week',False,&quot;wangh&quot;,100)

</code></pre>
<p>tips:</p>
<ul class="task-list">
<li>
<p>元组只读，不能增删改</p>
</li>
<li>
<p>元组内只有一个值时，需要加逗号 <code>tuple=(100,)</code></p>
</li>
<li>
<p>元组速度快于列表</p>
</li>
<li class="task-list-item">
<p><input type="checkbox" id="cbx_1" disabled="true"><label for="cbx_1">  <code>tuple.append()</code> </label></p>
</li>
</ul>
<h2 id="字典"><a class="anchor" href="#字典">#</a> 字典</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token builtin">dict</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'key1'</span><span class="token punctuation">:</span><span class="token string">'value1'</span><span class="token punctuation">,</span><span class="token string">'key2'</span><span class="token punctuation">:</span><span class="token string">'value2'</span><span class="token punctuation">,</span><span class="token string">'key3'</span><span class="token punctuation">:</span><span class="token string">'value3'</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>dictA<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'pro'</span><span class="token punctuation">:</span><span class="token string">"计算机"</span>，<span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'M'</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>dictA<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#通过键获取对应值</span></pre></td></tr><tr><td data-num="5"></td><td><pre>dictA<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">40</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#修改键对应值</span></pre></td></tr><tr><td data-num="7"></td><td><pre>dictA<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'pro'</span><span class="token punctuation">:</span><span class="token string">'数学'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#修改 / 增加字典数据</span></pre></td></tr></table></figure><p>tips:</p>
<ul>
<li>字典类型中 key 唯一不可重复，value 值不唯一</li>
</ul>
<h2 id="切片"><a class="anchor" href="#切片">#</a> 切片</h2>
<h3 id="对于一个列表"><a class="anchor" href="#对于一个列表">#</a> 对于一个列表</h3>
<table>
<thead>
<tr>
<th>list</th>
<th>11</th>
<th>22</th>
<th>33</th>
<th>44</th>
<th>55</th>
<th>66</th>
<th>77</th>
<th>88</th>
<th>99</th>
</tr>
</thead>
<tbody>
<tr>
<td>正向索引</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
</tr>
<tr>
<td>反向索引</td>
<td>-9</td>
<td>-8</td>
<td>-7</td>
<td>-6</td>
<td>-5</td>
<td>-4</td>
<td>-3</td>
<td>-2</td>
<td>-1</td>
</tr>
</tbody>
</table>
<p><strong>list [起始：终点：步长]</strong></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token builtin">list</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#[11,22,33,44,55]</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#[66,77,88,99]</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">#[33,44,55]</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">#[11,33,55,77] 每隔 2 个取一个</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">#[11,22,33,44]</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">#[99,88,77,66,55,44]</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">#[99,88,77]</span></pre></td></tr><tr><td data-num="16"></td><td><pre>华谊兄弟</pre></td></tr></table></figure><p>tips:</p>
<ul>
<li>
<p>必须由起点到终点，方向一致</p>
</li>
<li>
<p>左闭右开</p>
</li>
</ul>
<h2 id="zip"><a class="anchor" href="#zip">#</a> ZIP</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>alist<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="2"></td><td><pre>blist<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="3"></td><td><pre>czip<span class="token operator">=</span><span class="token builtin">zip</span><span class="token punctuation">(</span>alist<span class="token punctuation">,</span>blist<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>czip<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="输出"><a class="anchor" href="#输出">#</a> 输出</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr></table></figure><h2 id="循环"><a class="anchor" href="#循环">#</a> 循环</h2>
<h3 id="for-循环"><a class="anchor" href="#for-循环">#</a> for 循环</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>0123456789</pre></td></tr></table></figure><hr>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>(0, 'm')</pre></td></tr><tr><td data-num="2"></td><td><pre>(1, 'a')</pre></td></tr><tr><td data-num="3"></td><td><pre>(2, 'p')</pre></td></tr></table></figure><h4 id="break结束循环"><a class="anchor" href="#break结束循环">#</a> break 结束循环</h4>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token keyword">if</span> item<span class="token operator">==</span><span class="token number">5</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>         <span class="token keyword">break</span></pre></td></tr><tr><td data-num="4"></td><td><pre>         <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>0</pre></td></tr><tr><td data-num="2"></td><td><pre>1</pre></td></tr><tr><td data-num="3"></td><td><pre>2</pre></td></tr><tr><td data-num="4"></td><td><pre>3</pre></td></tr><tr><td data-num="5"></td><td><pre>4</pre></td></tr></table></figure><h4 id="continue跳过本次循环"><a class="anchor" href="#continue跳过本次循环">#</a> continue 跳过本次循环</h4>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token keyword">if</span> item<span class="token operator">==</span><span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre>         <span class="token keyword">continue</span></pre></td></tr><tr><td data-num="4"></td><td><pre>         <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>0</pre></td></tr><tr><td data-num="2"></td><td><pre>1</pre></td></tr><tr><td data-num="3"></td><td><pre>2</pre></td></tr><tr><td data-num="4"></td><td><pre>4</pre></td></tr><tr><td data-num="5"></td><td><pre>5</pre></td></tr><tr><td data-num="6"></td><td><pre>6</pre></td></tr><tr><td data-num="7"></td><td><pre>7</pre></td></tr><tr><td data-num="8"></td><td><pre>8</pre></td></tr><tr><td data-num="9"></td><td><pre>9</pre></td></tr></table></figure><h3 id="while循环"><a class="anchor" href="#while循环">#</a> while 循环</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>i<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    i<span class="token operator">+=</span><span class="token number">1</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>0</pre></td></tr><tr><td data-num="2"></td><td><pre>1</pre></td></tr><tr><td data-num="3"></td><td><pre>2</pre></td></tr><tr><td data-num="4"></td><td><pre>3</pre></td></tr><tr><td data-num="5"></td><td><pre>4</pre></td></tr><tr><td data-num="6"></td><td><pre>5</pre></td></tr><tr><td data-num="7"></td><td><pre>6</pre></td></tr><tr><td data-num="8"></td><td><pre>7</pre></td></tr><tr><td data-num="9"></td><td><pre>8</pre></td></tr><tr><td data-num="10"></td><td><pre>9</pre></td></tr></table></figure><h2 id="解包"><a class="anchor" href="#解包">#</a> 解包</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token string">'EX'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span><span class="token string">'173'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#倒序解包</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>k<span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>False 3.5 EX</pre></td></tr><tr><td data-num="2"></td><td><pre>1 7 3</pre></td></tr><tr><td data-num="3"></td><td><pre>8 5 4</pre></td></tr></table></figure><h2 id="交换变量"><a class="anchor" href="#交换变量">#</a> 交换变量</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>a<span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span></pre></td></tr><tr><td data-num="2"></td><td><pre>a<span class="token punctuation">,</span>b<span class="token operator">=</span>b<span class="token punctuation">,</span>a</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#交换变量</span></pre></td></tr></table></figure><h2 id="迭代器"><a class="anchor" href="#迭代器">#</a> 迭代器</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token operator">=</span><span class="token builtin">iter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'uu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>9 2 uu</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>[7, 8, 5, 1, '2', '1', '0']</pre></td></tr></table></figure><h2 id="练习"><a class="anchor" href="#练习">#</a> 练习</h2>
<blockquote>
<p>输出 1000 以内能被 5 整除不能被 7 整除的数</p>
</blockquote>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token keyword">if</span> item<span class="token operator">%</span><span class="token number">5</span><span class="token operator">==</span><span class="token number">0</span> <span class="token keyword">and</span> item<span class="token operator">%</span><span class="token number">7</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>         <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>     <span class="token keyword">elif</span> item<span class="token operator">%</span><span class="token number">7</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>          <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre> a<span class="token operator">=</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入："</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></pre></td></tr></table></figure><blockquote>
<p>利用多分支选择结构将成绩从百分制变换到等级制。<br>
90 分以上优秀；80-90，良好；70-80，中等；60-70，及格 ；60 以下不及格。</p>
</blockquote>
<figure class="highlight python"><figcaption data-lang="python"><span>n</span></figcaption><table><tr><td data-num="1"></td><td><pre>cores<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入成绩：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">if</span> scores <span class="token operator">></span><span class="token number">90</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'优秀'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">elif</span> <span class="token number">80</span><span class="token operator">&lt;</span>scores<span class="token operator">&lt;=</span><span class="token number">90</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'良好'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">elif</span> <span class="token number">70</span><span class="token operator">&lt;</span>scores<span class="token operator">&lt;=</span><span class="token number">80</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'良好'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">elif</span> <span class="token number">80</span><span class="token operator">&lt;</span>scores<span class="token operator">&lt;=</span><span class="token number">70</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'及格'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不及格'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><blockquote>
<p>用字母 B 来表示 “百”、字母 S 表示 “十”，用 12...n 来表示不为零的个位数字 n（&lt;10），换个格式来输出任一个不超过 3 位的正整数。<br>
例如 234 应该被输出为 BBSSS1234，因为它有 2 个 “百”、3 个 “十”、以及个位的 4。</p>
</blockquote>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入&lt;1000的整数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>num1 <span class="token operator">=</span> num <span class="token operator">//</span> <span class="token number">100</span><span class="token comment"># n 中百位上的数字个数</span></pre></td></tr><tr><td data-num="3"></td><td><pre>num2 <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">100</span> <span class="token operator">*</span> num1<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">10</span><span class="token comment"># n 中十位上的数字个数</span></pre></td></tr><tr><td data-num="4"></td><td><pre>num3 <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token comment"># n 中个位上的数字个数</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'B'</span> <span class="token operator">*</span> num1 <span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'S'</span> <span class="token operator">*</span> num2 <span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num3<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>     <span class="token keyword">print</span><span class="token punctuation">(</span>item <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr></table></figure><blockquote>
<p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。1234567890987654321123456789</p>
</blockquote>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>str1<span class="token operator">=</span><span class="token string">'123456789874152633214894'</span></pre></td></tr><tr><td data-num="2"></td><td><pre>dictA<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token string">'ling'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token string">'yi'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token string">'er'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">'san'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">'si'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string">'wu'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token string">'liu'</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token string">'qi'</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">'ba'</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token string">'jiu'</span><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>lst<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#将字符串类型 st1 转换为 int 类型并解包放在列表 lst 中</span></pre></td></tr><tr><td data-num="5"></td><td><pre>Sum1<span class="token operator">=</span><span class="token builtin">sum</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#对 lst 列表内的值求和</span></pre></td></tr><tr><td data-num="7"></td><td><pre>sum2<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>Sum1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#先将 Sum1 转换为字符串类型，再转换为 int 类型，解包放进列表中</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> sum2<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>dictA<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">' '</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr></table></figure><blockquote>
<p>1. 水仙花题目：输出 1000 以内的所有水仙花数。水仙花满足的条件如下：<br>
1) 三位数字<br>
 2) 各个数字的立方和等于数字本身</p>
</blockquote>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#百位</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#十位</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">for</span> z <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#个位</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            sum1<span class="token operator">=</span>x<span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span>y<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span>z</pre></td></tr><tr><td data-num="5"></td><td><pre>            sum2<span class="token operator">=</span>x<span class="token operator">**</span><span class="token number">3</span><span class="token operator">+</span>y<span class="token operator">**</span><span class="token number">3</span><span class="token operator">+</span>z<span class="token operator">**</span><span class="token number">3</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token keyword">if</span> sum1<span class="token operator">==</span>sum2<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token keyword">print</span><span class="token punctuation">(</span>sum1<span class="token punctuation">)</span></pre></td></tr></table></figure><p>tips:</p>
<ul>
<li>
<p>对于多重 <code>for</code>  循环，先把最内循环执行完再依次往外进行</p>
</li>
<li>
<p>idea2</p>
</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    lst1<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lst1<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        num<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">for</span> j <span class="token keyword">in</span> lst1<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            num<span class="token operator">+=</span><span class="token builtin">int</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">3</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">if</span> i<span class="token operator">==</span>num<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>人工智能</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象</title>
    <url>/2023/07/24/AI/python/week2/</url>
    <content><![CDATA[<h2 id="面向对象"><a class="anchor" href="#面向对象">#</a> 面向对象</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#构造方法</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        self<span class="token punctuation">.</span>name<span class="token operator">=</span>name</pre></td></tr><tr><td data-num="4"></td><td><pre>        self<span class="token punctuation">.</span>age<span class="token operator">=</span>age</pre></td></tr><tr><td data-num="5"></td><td><pre>        self<span class="token punctuation">.</span>address<span class="token operator">=</span>address</pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">show</span> <span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#对象方法</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"姓名:"</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token string">'年龄:'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">,</span><span class="token string">'住址：'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>address<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token decorator annotation punctuation">@classmethod</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">classFun</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#类方法</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'class....'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>tom<span class="token operator">=</span>Person<span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'usa'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>tom<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>tom<span class="token punctuation">.</span>classFun<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>Person<span class="token punctuation">.</span>classFun<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>姓名: tom 年龄: 20 住址： usa</pre></td></tr><tr><td data-num="2"></td><td><pre>class....</pre></td></tr><tr><td data-num="3"></td><td><pre>class....</pre></td></tr></table></figure><p>tips:</p>
<ul>
<li>类 <code>class</code> ： 一般为对象共有特点，提取出类</li>
<li>属性： 对象的属性，如人的年龄 <code>age</code> 、名字 <code>name</code> 、地址 <code>address</code>  等</li>
<li>方法
<ul>
<li>对象方法</li>
<li>类方法: <code>@classmethod</code></li>
</ul>
</li>
<li>对象</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        self<span class="token punctuation">.</span>name<span class="token operator">=</span>name</pre></td></tr><tr><td data-num="4"></td><td><pre>        self<span class="token punctuation">.</span>age<span class="token operator">=</span>age</pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'姓名：'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token string">'年龄：'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    </pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">pass</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>  tomA<span class="token operator">=</span>A<span class="token punctuation">(</span><span class="token string">"tomA"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>  tomA<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>  tomB<span class="token operator">=</span>B<span class="token punctuation">(</span><span class="token string">"tomB"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  tomB<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>姓名： tomA 年龄： 18</pre></td></tr><tr><td data-num="2"></td><td><pre>姓名： tomB 年龄： 20</pre></td></tr></table></figure><h3 id="封装"><a class="anchor" href="#封装">#</a> 封装</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        self<span class="token punctuation">.</span>name<span class="token operator">=</span>name</pre></td></tr><tr><td data-num="4"></td><td><pre>        self<span class="token punctuation">.</span>age<span class="token operator">=</span>age</pre></td></tr><tr><td data-num="5"></td><td><pre>        self<span class="token punctuation">.</span>__address<span class="token operator">=</span>address<span class="token comment">#私有变量，不能直接访问</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'姓名：'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token string">'年龄：'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">,</span><span class="token string">'地址：'</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>__address<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">getAddress</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>__address</pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">setAddress</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>address<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        self<span class="token punctuation">.</span>__address<span class="token operator">=</span>address</pre></td></tr><tr><td data-num="12"></td><td><pre>tomA<span class="token operator">=</span>A<span class="token punctuation">(</span><span class="token string">'tomA'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>tomA<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>tomA<span class="token punctuation">.</span>getAddress<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>tomA<span class="token punctuation">.</span>setAddress<span class="token punctuation">(</span><span class="token string">'china'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>tomA<span class="token punctuation">.</span>getAddress<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>姓名： tomA 年龄： 20 地址： USA</pre></td></tr><tr><td data-num="2"></td><td><pre>USA</pre></td></tr><tr><td data-num="3"></td><td><pre>china</pre></td></tr></table></figure><h3 id="多态"><a class="anchor" href="#多态">#</a> 多态</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello animal'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span>Animal<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello dog'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello cat'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">Tiger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">show</span> <span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello tiger'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>dog<span class="token operator">=</span>Dog<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>cat<span class="token operator">=</span>Cat<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>tiger<span class="token operator">=</span>Tiger<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>dog<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>cat<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>tiger<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>输出</p>
<figure class="highlight text"><figcaption data-lang="text"></figcaption><table><tr><td data-num="1"></td><td><pre>hello animal</pre></td></tr><tr><td data-num="2"></td><td><pre>hello dog</pre></td></tr><tr><td data-num="3"></td><td><pre>hello cat</pre></td></tr><tr><td data-num="4"></td><td><pre>hello tiger</pre></td></tr></table></figure><p>tips：</p>
<ul>
<li>多态
<ul>
<li>建立在继承的基础上</li>
<li>同一种方法，多种形态展示</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>人工智能</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
